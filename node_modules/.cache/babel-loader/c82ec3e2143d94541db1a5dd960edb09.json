{"ast":null,"code":"var _jsxFileName = \"/Users/sonjaparsell/Development/udemy-react/widgets/src/Components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [term, setTerm] = useState(\"computer\");\n  const [results, setResults] = useState([]);\n  console.log(term);\n  console.log(results); // first option - most used in the community\n\n  useEffect(() => {\n    const search = async () => {\n      const {\n        data\n      } = await axios.get('https://en.wikipedia.org/w/api.php', {\n        params: {\n          action: 'query',\n          list: 'search',\n          origin: '*',\n          format: 'json',\n          srsearch: term\n        }\n      });\n      setResults(data.query.search); //    console.log(data)\n    }; // if (term) {\n\n\n    search(); // };\n  }, [term]); //    second option - immediately called function\n  // useEffect(() => {\n  //     (async () => {\n  //         const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\n  //             params: {\n  //                 action: \"query\", \n  //                 list: 'search', \n  //                 origin: '*',\n  //                 format: 'json',\n  //                 srsearch: term,\n  //             },\n  //         });\n  //         setResults(data);\n  //     })(); \n  // }, [term]);\n  // third option - regular promise\n  // useEffect(() => {\n  //     axios.get(term)\n  //     .then((response) => {\n  //         console.log(response.data);\n  //     })\n  // })\n\n  const renderResults = results.map(result => {\n    // console.log(results)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" \", result.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: result.snippet\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, result.pageid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Search Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"type your search term here\",\n          type: \"text\",\n          value: term,\n          onChange: e => setTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: renderResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"toglATVClmVnj4YDzkxukmPmvNM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sonjaparsell/Development/udemy-react/widgets/src/Components/Search.jsx"],"names":["React","useState","useEffect","axios","Search","term","setTerm","results","setResults","console","log","search","data","get","params","action","list","origin","format","srsearch","query","renderResults","map","result","title","__html","snippet","pageid","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBL,QAAQ,CAAC,UAAD,CAAlC;AACA,QAAM,CAAEM,OAAF,EAAWC,UAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EANiB,CAQjB;;AACDL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,MAAM,GAAG,YAAY;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMT,KAAK,CAACU,GAAN,CAAU,oCAAV,EAAgD;AAElEC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE,OADJ;AAEJC,UAAAA,IAAI,EAAE,QAFF;AAGJC,UAAAA,MAAM,EAAE,GAHJ;AAIJC,UAAAA,MAAM,EAAE,MAJJ;AAKJC,UAAAA,QAAQ,EAAEd;AALN;AAF0D,OAAhD,CAAvB;AAUAG,MAAAA,UAAU,CAACI,IAAI,CAACQ,KAAL,CAAWT,MAAZ,CAAV,CAXuB,CAY1B;AACA,KAbD,CADY,CAeP;;;AACAA,IAAAA,MAAM,GAhBC,CAiBP;AACR,GAlBQ,EAkBP,CAACN,IAAD,CAlBO,CAAT,CATkB,CA6BrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMgB,aAAa,GAAGd,OAAO,CAACe,GAAR,CAAaC,MAAD,IAAY;AAC1C;AACA,wBACA;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACG;AAAA,4BAAOA,MAAM,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAM,YAAA,uBAAuB,EAAE;AAAEC,cAAAA,MAAM,EAAEF,MAAM,CAACG;AAAjB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUH,MAAM,CAACI,MAAjB;AAAA;AAAA;AAAA;AAAA,YADA;AAWH,GAbqB,CAAtB;AAgBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ;AACA,UAAA,SAAS,EAAC,OADV;AAEA,UAAA,WAAW,EAAC,4BAFZ;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,KAAK,EAAEtB,IAJP;AAKA,UAAA,QAAQ,EAAEuB,CAAC,IAAItB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AALtB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACCT;AADD;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAxFD;;GAAMjB,M;;KAAAA,M;AA0FN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nconst Search = () => {\n\n    const [ term, setTerm ] = useState(\"computer\")\n    const [ results, setResults ] = useState([])\n\n    console.log(term)\n    console.log(results)\n\n    // first option - most used in the community\n   useEffect(() => {\n       const search = async () => {\n           const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\n            \n                params: {\n                    action: 'query', \n                    list: 'search',\n                    origin: '*', \n                    format: 'json',\n                    srsearch: term,\n                },\n           });\n           setResults(data.query.search);\n        //    console.log(data)\n       };\n            // if (term) {\n            search();\n            // };\n   },[term]);\n\n//    second option - immediately called function\n// useEffect(() => {\n//     (async () => {\n//         const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\n//             params: {\n//                 action: \"query\", \n//                 list: 'search', \n//                 origin: '*',\n//                 format: 'json',\n//                 srsearch: term,\n//             },\n//         });\n//         setResults(data);\n//     })(); \n// }, [term]);\n\n// third option - regular promise\n    // useEffect(() => {\n    //     axios.get(term)\n    //     .then((response) => {\n    //         console.log(response.data);\n    //     })\n    // })\n\n    const renderResults = results.map((result) => {\n        // console.log(results)\n        return (\n        <div key={result.pageid} className=\"item\">\n            <div className=\"content\">\n                <div className=\"header\">\n                   <h2 > {result.title}</h2>\n                   <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span>\n                </div>\n                {/* {result.snippet} */}\n            </div>\n        </div>\n        )\n    });\n\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"ui field\">\n                    <label>Enter Search Term</label>\n                        <input \n                        className=\"input\"\n                        placeholder=\"type your search term here\"\n                        type=\"text\"\n                        value={term}\n                        onChange={e => setTerm(e.target.value)}\n                        />\n                </div>\n                <div className=\"ui celled list\">\n                {renderResults}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}