{"ast":null,"code":"var _jsxFileName = \"/Users/sonjaparsell/Development/udemy-react/widgets/src/Components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState(\"\");\n  console.log(term);\n  console.log(results); // first option - most used in the community\n  //    useEffect(() => {\n  //        const search = async () => {\n  //            const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\n  //                 params: {\n  //                     action: 'query', \n  //                     list: 'search',\n  //                     origin: '*', \n  //                     format: 'json',\n  //                     srsearch: {term},\n  //                 },\n  //            });\n  //            setResults(data);\n  //        };\n  //         search();\n  //    },[term]);\n  //    second option - immediately called function\n  // useEffect(() => {\n  //     (async () => {\n  //         await axios.get('https://en.wikipedia.org/w/api.php', {\n  //             params: {\n  //                 action: \"query\", \n  //                 list: 'search', \n  //                 origin: '*',\n  //                 format: 'json',\n  //                 srsearch: {term},\n  //             },\n  //         });\n  //     })(); \n  // }, [term]);\n  // third option - regular promise\n  // useEffect(() => {\n  //     axios.get(term)\n  //     .then((response) => {\n  //         console.log(response.data);\n  //     })\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Search Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"horses\",\n          type: \"text\",\n          value: term,\n          onChange: e => setTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"DNVfC0Z2lm/5FJo+P00MhxhdiBU=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sonjaparsell/Development/udemy-react/widgets/src/Components/Search.jsx"],"names":["React","useState","useEffect","axios","Search","term","setTerm","results","setResults","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEM,OAAF,EAAWC,UAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EANiB,CAQjB;AACJ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ;AACA,UAAA,SAAS,EAAC,OADV;AAEA,UAAA,WAAW,EAAC,QAFZ;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,KAAK,EAAEF,IAJP;AAKA,UAAA,QAAQ,EAAEM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AALtB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArED;;GAAMT,M;;KAAAA,M;AAuEN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nconst Search = () => {\n\n    const [ term, setTerm ] = useState(\"\")\n    const [ results, setResults ] = useState(\"\")\n\n    console.log(term)\n    console.log(results)\n\n    // first option - most used in the community\n//    useEffect(() => {\n//        const search = async () => {\n//            const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\n            \n//                 params: {\n//                     action: 'query', \n//                     list: 'search',\n//                     origin: '*', \n//                     format: 'json',\n//                     srsearch: {term},\n//                 },\n//            });\n//            setResults(data);\n//        };\n//         search();\n//    },[term]);\n\n//    second option - immediately called function\n// useEffect(() => {\n//     (async () => {\n//         await axios.get('https://en.wikipedia.org/w/api.php', {\n//             params: {\n//                 action: \"query\", \n//                 list: 'search', \n//                 origin: '*',\n//                 format: 'json',\n//                 srsearch: {term},\n//             },\n//         });\n//     })(); \n// }, [term]);\n\n// third option - regular promise\n    // useEffect(() => {\n    //     axios.get(term)\n    //     .then((response) => {\n    //         console.log(response.data);\n    //     })\n    // })\n\n    \n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"ui field\">\n                    <label>Enter Search Term</label>\n                        <input \n                        className=\"input\"\n                        placeholder=\"horses\"\n                        type=\"text\"\n                        value={term}\n                        onChange={e => setTerm(e.target.value)}\n\n                        >\n\n                        </input>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}